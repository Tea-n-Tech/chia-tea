"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class LogLevel(_LogLevel, metaclass=_LogLevelEnumTypeWrapper):
    pass
class _LogLevel:
    V = typing.NewType('V', builtins.int)
class _LogLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LogLevel.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TRACE = LogLevel.V(0)
    DEBUG = LogLevel.V(1)
    INFO = LogLevel.V(2)
    WARNING = LogLevel.V(3)
    ERROR = LogLevel.V(4)

TRACE = LogLevel.V(0)
DEBUG = LogLevel.V(1)
INFO = LogLevel.V(2)
WARNING = LogLevel.V(3)
ERROR = LogLevel.V(4)
global___LogLevel = LogLevel


class MachineConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"name",b"name"]) -> None: ...
global___MachineConfig = MachineConfig

class LoggingConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOGLEVEL_FIELD_NUMBER: builtins.int
    LOG_TO_CONSOLE_FIELD_NUMBER: builtins.int
    LOG_TO_FILE_FIELD_NUMBER: builtins.int
    MAX_LOGFILES_FIELD_NUMBER: builtins.int
    MAX_LOGFILE_SIZE_MB_FIELD_NUMBER: builtins.int
    loglevel: global___LogLevel.V = ...
    log_to_console: builtins.bool = ...
    log_to_file: builtins.bool = ...
    max_logfiles: builtins.int = ...
    max_logfile_size_mb: builtins.int = ...
    def __init__(self,
        *,
        loglevel : global___LogLevel.V = ...,
        log_to_console : builtins.bool = ...,
        log_to_file : builtins.bool = ...,
        max_logfiles : builtins.int = ...,
        max_logfile_size_mb : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"log_to_console",b"log_to_console",u"log_to_file",b"log_to_file",u"loglevel",b"loglevel",u"max_logfile_size_mb",b"max_logfile_size_mb",u"max_logfiles",b"max_logfiles"]) -> None: ...
global___LoggingConfig = LoggingConfig

class CopyConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOURCE_FOLDERS_FIELD_NUMBER: builtins.int
    TARGET_FOLDERS_FIELD_NUMBER: builtins.int
    @property
    def source_folders(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def target_folders(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        source_folders : typing.Optional[typing.Iterable[typing.Text]] = ...,
        target_folders : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"source_folders",b"source_folders",u"target_folders",b"target_folders"]) -> None: ...
global___CopyConfig = CopyConfig

class ChiaConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOGFILE_FILEPATH_FIELD_NUMBER: builtins.int
    logfile_filepath: typing.Text = ...
    def __init__(self,
        *,
        logfile_filepath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"logfile_filepath",b"logfile_filepath"]) -> None: ...
global___ChiaConfig = ChiaConfig

class DiscordConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOKEN_FIELD_NUMBER: builtins.int
    CHANNEL_ID_FIELD_NUMBER: builtins.int
    token: typing.Text = ...
    channel_id: builtins.int = ...
    def __init__(self,
        *,
        token : typing.Text = ...,
        channel_id : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"channel_id",b"channel_id",u"token",b"token"]) -> None: ...
global___DiscordConfig = DiscordConfig

class MonitoringConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AuthConfig(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CERT_FILEPATH_FIELD_NUMBER: builtins.int
        KEY_FILEPATH_FIELD_NUMBER: builtins.int
        cert_filepath: typing.Text = ...
        key_filepath: typing.Text = ...
        def __init__(self,
            *,
            cert_filepath : typing.Text = ...,
            key_filepath : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"cert_filepath",b"cert_filepath",u"key_filepath",b"key_filepath"]) -> None: ...

    class ServerConfig(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PORT_FIELD_NUMBER: builtins.int
        DB_FILEPATH_FIELD_NUMBER: builtins.int
        port: builtins.int = ...
        db_filepath: typing.Text = ...
        def __init__(self,
            *,
            port : builtins.int = ...,
            db_filepath : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"db_filepath",b"db_filepath",u"port",b"port"]) -> None: ...

    class ClientConfig(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class SendUpdateEvery(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            CPU_FIELD_NUMBER: builtins.int
            RAM_FIELD_NUMBER: builtins.int
            DISK_FIELD_NUMBER: builtins.int
            PROCESS_FIELD_NUMBER: builtins.int
            FARMER_FIELD_NUMBER: builtins.int
            FARMER_HARVESTER_FIELD_NUMBER: builtins.int
            HARVESTER_FIELD_NUMBER: builtins.int
            WALLET_FIELD_NUMBER: builtins.int
            HARVESTER_PLOT_FIELD_NUMBER: builtins.int
            cpu: builtins.float = ...
            ram: builtins.float = ...
            disk: builtins.float = ...
            process: builtins.float = ...
            farmer: builtins.float = ...
            farmer_harvester: builtins.float = ...
            harvester: builtins.float = ...
            wallet: builtins.float = ...
            harvester_plot: builtins.float = ...
            """double plotting_job = 9;"""

            def __init__(self,
                *,
                cpu : builtins.float = ...,
                ram : builtins.float = ...,
                disk : builtins.float = ...,
                process : builtins.float = ...,
                farmer : builtins.float = ...,
                farmer_harvester : builtins.float = ...,
                harvester : builtins.float = ...,
                wallet : builtins.float = ...,
                harvester_plot : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal[u"cpu",b"cpu",u"disk",b"disk",u"farmer",b"farmer",u"farmer_harvester",b"farmer_harvester",u"harvester",b"harvester",u"harvester_plot",b"harvester_plot",u"process",b"process",u"ram",b"ram",u"wallet",b"wallet"]) -> None: ...

        ADDRESS_FIELD_NUMBER: builtins.int
        PORT_FIELD_NUMBER: builtins.int
        COLLECT_DATA_EVERY_FIELD_NUMBER: builtins.int
        SEND_UPDATE_EVERY_FIELD_NUMBER: builtins.int
        address: typing.Text = ...
        port: builtins.int = ...
        collect_data_every: builtins.float = ...
        @property
        def send_update_every(self) -> global___MonitoringConfig.ClientConfig.SendUpdateEvery: ...
        def __init__(self,
            *,
            address : typing.Text = ...,
            port : builtins.int = ...,
            collect_data_every : builtins.float = ...,
            send_update_every : typing.Optional[global___MonitoringConfig.ClientConfig.SendUpdateEvery] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal[u"send_update_every",b"send_update_every"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"address",b"address",u"collect_data_every",b"collect_data_every",u"port",b"port",u"send_update_every",b"send_update_every"]) -> None: ...

    AUTH_FIELD_NUMBER: builtins.int
    SERVER_FIELD_NUMBER: builtins.int
    CLIENT_FIELD_NUMBER: builtins.int
    @property
    def auth(self) -> global___MonitoringConfig.AuthConfig: ...
    @property
    def server(self) -> global___MonitoringConfig.ServerConfig: ...
    @property
    def client(self) -> global___MonitoringConfig.ClientConfig: ...
    def __init__(self,
        *,
        auth : typing.Optional[global___MonitoringConfig.AuthConfig] = ...,
        server : typing.Optional[global___MonitoringConfig.ServerConfig] = ...,
        client : typing.Optional[global___MonitoringConfig.ClientConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"auth",b"auth",u"client",b"client",u"server",b"server"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"auth",b"auth",u"client",b"client",u"server",b"server"]) -> None: ...
global___MonitoringConfig = MonitoringConfig

class DevelopmentConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TESTING_FIELD_NUMBER: builtins.int
    testing: builtins.bool = ...
    def __init__(self,
        *,
        testing : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"testing",b"testing"]) -> None: ...
global___DevelopmentConfig = DevelopmentConfig

class ChiaTeaConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERSION_FIELD_NUMBER: builtins.int
    MACHINE_FIELD_NUMBER: builtins.int
    LOGGING_FIELD_NUMBER: builtins.int
    COPY_FIELD_NUMBER: builtins.int
    CHIA_FIELD_NUMBER: builtins.int
    DISCORD_FIELD_NUMBER: builtins.int
    MONITORING_FIELD_NUMBER: builtins.int
    DEVELOPMENT_FIELD_NUMBER: builtins.int
    version: builtins.int = ...
    """provides config versioning"""

    @property
    def machine(self) -> global___MachineConfig: ...
    @property
    def logging(self) -> global___LoggingConfig: ...
    @property
    def copy(self) -> global___CopyConfig: ...
    @property
    def chia(self) -> global___ChiaConfig: ...
    @property
    def discord(self) -> global___DiscordConfig: ...
    @property
    def monitoring(self) -> global___MonitoringConfig: ...
    @property
    def development(self) -> global___DevelopmentConfig: ...
    def __init__(self,
        *,
        version : builtins.int = ...,
        machine : typing.Optional[global___MachineConfig] = ...,
        logging : typing.Optional[global___LoggingConfig] = ...,
        copy : typing.Optional[global___CopyConfig] = ...,
        chia : typing.Optional[global___ChiaConfig] = ...,
        discord : typing.Optional[global___DiscordConfig] = ...,
        monitoring : typing.Optional[global___MonitoringConfig] = ...,
        development : typing.Optional[global___DevelopmentConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"chia",b"chia",u"copy",b"copy",u"development",b"development",u"discord",b"discord",u"logging",b"logging",u"machine",b"machine",u"monitoring",b"monitoring"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"chia",b"chia",u"copy",b"copy",u"development",b"development",u"discord",b"discord",u"logging",b"logging",u"machine",b"machine",u"monitoring",b"monitoring",u"version",b"version"]) -> None: ...
global___ChiaTeaConfig = ChiaTeaConfig
