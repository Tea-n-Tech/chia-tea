name: Release Python Package

on:
  push:
    branches:
      - main
    tags:
      - "**"

defaults:
  run:
    shell: bash

jobs:
  upload:
    runs-on: ubuntu-latest
    environment:
      name: deployment

    steps:
      - name: Cancel previous runs on the same branch
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          ./bin/task setup

      - name: Lint code
        run: |
          ./bin/task lint

      - name: Test code
        run: |
          ./bin/task test

      - name: Build packages for release
        run: |
          ./bin/task build

      - name: Save packages as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          if-no-files-found: error

      - name: Test for secrets access
        id: check_secrets
        shell: bash
        env:
          PYPI_TOKEN: "${{ secrets.PYPI_API_TOKEN }}"
          TEST_PYPI_TOKEN: "${{ secrets.TEST_PYPI_API_TOKEN }}"
        run: |
          unset HAS_SECRET
          if [ -n "$PYPI_TOKEN" ]; then HAS_SECRET='true' ; fi
          echo "Has PYPI_TOKEN: $HAS_SECRET"
          echo ::set-output name=HAS_SECRET::${HAS_SECRET}

          unset HAS_TEST_SECRET
          if [ -n "$TEST_PYPI_TOKEN" ]; then HAS_TEST_SECRET='true' ; fi
          echo "Has TEST_PYPI_TOKEN: $HAS_TEST_SECRET"
          echo ::set-output name=HAS_TEST_SECRET::${HAS_TEST_SECRET}

      - name: Publish distribution to Test PyPI
        if: steps.check_secrets.outputs.HAS_TEST_SECRET && startsWith(github.event.ref, 'refs/heads/main')
        env:
          TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: poetry run twine upload --skip-existing --verbose 'dist/*'

      - name: Publish distribution to PyPI
        if: steps.check_secrets.outputs.HAS_SECRET && startsWith(github.event.ref, 'refs/tags')
        env:
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry run twine upload --skip-existing --verbose 'dist/*'
