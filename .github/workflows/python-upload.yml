name: Release Python Package

on:
  workflow_run:
    workflows: ["Python Linting, Test and Upload"]
    types:
      - completed
  push:
    branches:
      - staging
      - "release/*"
    tags:
      - "*.*.*"

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          ./bin/task setup

      - name: Lint code
        run: |
          ./bin/task lint

      - name: Test code
        run: |
          ./bin/task test

      - name: Test code
        run: |
          ./bin/task test

      - name: Build packages for release
        run: |
          ./bin/task build

      - name: Save packages as artifacts
        uses: actions/upload-artifact@2
        with:
          name: dist
          path: dist
          if-no-files-found: error

      - name: Publish package to Test-PyPi
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/staging')
        env:
          TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: twine upload --non-interactive --skip-existing --verbose 'dist/*'

      - name: Publish package to PyPi
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        env:
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --non-interactive --skip-existing --verbose 'dist/*'
