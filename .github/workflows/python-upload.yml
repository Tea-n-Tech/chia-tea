name: Release Python Package

on:
  push:
    branches:
      - staging
      - "main"
    tags:
      - "**"

defaults:
  run:
    shell: bash

jobs:
  upload:
    runs-on: ubuntu-latest
    environment:
      name: staging

    steps:
      - name: Cancel previous runs on the same branch
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          ./bin/task setup

      - name: Lint code
        run: |
          ./bin/task lint

      - name: Test code
        run: |
          ./bin/task test

      - name: Build packages for release
        run: |
          ./bin/task build

      - name: Save packages as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          if-no-files-found: error

      - name: Publish package to Test-PyPi
        if: ${{ github.ref == 'refs/heads/staging' }}
        env:
          REPO_ALIAS: test-pypi
          PYPI_URL: https://test.pypi.org/legacy/
          PYPI_USERNAME: __token__
          PYPI_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          poetry config repositories.$REPO_ALIAS "https://test.pypi.org/legacy/"
          poetry config http-basic.$REPO_ALIAS "__token__" "$PYPI_TOKEN"
          poetry publish --no-interaction --repository $REPO_ALIAS

      - name: Publish package to PyPi
        if: ${{ github.ref == 'refs/tags' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --non-interactive --skip-existing --verbose 'dist/*'
